pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M2"
    }

    stages {
        stage('Build') {
            steps {
                // Get some code from a GitHub repository
                git 'https://github.com/JayashreeKasireddy/star-agile-banking-finance.git'

                // Run Maven on a Unix agent.
                sh "mvn -Dmaven.test.failure.ignore=true clean package"

                // To run Maven on a Windows agent, use
                // bat "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
        stage('Generate Test Reports') {
            steps {
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/var/lib/jenkins/workspace/BankingandFinance/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
        }
        stage('Create Docker Image') {
            steps {
                sh'docker build -t jaya677/banking .'
            }
        }
        stage('Docker-login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-log', passwordVariable: 'dockerpassword', usernameVariable: 'dockerusername')]) {
                sh'docker login -u ${dockerusername} -p ${dockerpassword}'
                  }
             }
        }
        stage('Push-Image') {
            steps {
                sh'docker push jaya677/banking'
              }
         }
        stage('Config & Deployment') {
            steps {
                withCredentials([aws(accessKeyVariable: 'awsaccesskey', credentialsId: 'awsaccesskey', secretKeyVariable: 'awssecretkey')]) {
                dir('terraform-files') {
                sh 'sudo chmod 600 jayak-key.pem' 
                sh 'terraform init'
                sh 'terraform validate'
                sh 'terraform apply --auto-approve'
                   }
                } 
             }
         }
    }
}
       
